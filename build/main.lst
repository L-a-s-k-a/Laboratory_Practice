ARM GAS  C:\Users\mono\AppData\Local\Temp\ccTOguEk.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.GPIO_Ini_1,"ax",%progbits
  21              		.align	1
  22              		.global	GPIO_Ini_1
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	GPIO_Ini_1:
  28              	.LFB130:
  29              		.file 2 "Core/Src/init.c"
   1:Core/Src/init.c **** // #include <init.h>
   2:Core/Src/init.c **** 
   3:Core/Src/init.c **** // // void GPIO_1(void){
   4:Core/Src/init.c **** 
   5:Core/Src/init.c **** // //       SET_BIT(RCC_GPIO_EN,RCC_GPIOB_EN | RCC_GPIOC_EN | RCC_GPIOC_EN);
   6:Core/Src/init.c **** // //    // *(uint32_t*)(0x40023800UL + 0x30UL) |= 0x06; //–í–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–
   7:Core/Src/init.c **** // //      SET_BIT(GPIOB_MODER,GPIOB_MODE_PIN7_OUT | GPIOB_MODE_PIN14_OUT);
   8:Core/Src/init.c **** // //     //*(uint32_t*)(0x40020400UL + 0x00UL) |= 0x4000; //–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–±–æ—Ç—ã 7-–≥–æ
   9:Core/Src/init.c **** // //       SET_BIT(GPIOB_OTYPER,GPIOB_OTYPE_PIN7_PP | GPIOB_OTYPE_PIN14_PP );
  10:Core/Src/init.c **** // //     //*(uint32_t*)(0x40020400UL + 0x04UL) |= 0x00; //–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ PushPull —Ä–∞–±–
  11:Core/Src/init.c **** // //     SET_BIT(GPIOB_OSPEEDR, GPIOB_OSPEED_PIN7_MID | GPIOB_OSPEED_PIN14_MID);
  12:Core/Src/init.c **** // //     //*(uint32_t*)(0x40020400UL + 0x08UL) |= 0x4000; //–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä
  13:Core/Src/init.c **** // //     SET_BIT(GPIOB_PUPDR,GPIOB_PUPDR_PIN7_NOPUPD | GPIOB_PUPDR_PIN14_NOPUPD);
  14:Core/Src/init.c ****     
  15:Core/Src/init.c **** // //     //*(uint32_t*)(0x40020400UL + 0x0CUL) |= 0x00; //–û—Ç–∫–ª—é—á–µ–Ω–∏–µ PU/PD —Ä–µ–∑–∏—Å—Ç–
  16:Core/Src/init.c **** // // }
  17:Core/Src/init.c **** 
  18:Core/Src/init.c **** // void Init_GPIO(void) {
  19:Core/Src/init.c **** //     // ÂºÄÂêØGPIOBÂíåGPIOCÊó∂Èíü
  20:Core/Src/init.c **** //     RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN | RCC_AHB1ENR_GPIOCEN;
  21:Core/Src/init.c **** 
  22:Core/Src/init.c **** //     // ÈÖçÁΩÆGPIOBËæìÂá∫ÂºïËÑöÔºàPB2, PB6, PB1, PB3, PB5, PB12Ôºâ
  23:Core/Src/init.c **** //     GPIOB->MODER |= (GPIO_MODER_MODE0_0 | GPIO_MODER_MODE7_0 | GPIO_MODER_MODE14_0 |
  24:Core/Src/init.c **** //                      GPIO_MODER_MODE3_0 | GPIO_MODER_MODE5_0 | GPIO_MODER_MODE4_0);
  25:Core/Src/init.c **** //     // GPIOB->OTYPER &= ~(GPIO_OTYPER_OT2 | GPIO_OTYPER_OT6 | GPIO_OTYPER_OT1 |
  26:Core/Src/init.c **** //     //                    GPIO_OTYPER_OT3 | GPIO_OTYPER_OT5 | GPIO_OTYPER_OT12);
  27:Core/Src/init.c **** //     GPIOB->OSPEEDR |= (GPIO_OSPEEDER_OSPEEDR0_1 | GPIO_OSPEEDER_OSPEEDR7_1 |
  28:Core/Src/init.c **** //                        GPIO_OSPEEDER_OSPEEDR14_1 | GPIO_OSPEEDER_OSPEEDR3_1 |
  29:Core/Src/init.c **** //                        GPIO_OSPEEDER_OSPEEDR15_1 | GPIO_OSPEEDER_OSPEEDR4_1);
ARM GAS  C:\Users\mono\AppData\Local\Temp\ccTOguEk.s 			page 2


  30:Core/Src/init.c **** //     // GPIOB->PUPDR &= ~(GPIO_PUPDR_PUPD2 | GPIO_PUPDR_PUPD6 | GPIO_PUPDR_PUPD1 |
  31:Core/Src/init.c **** //     //                   GPIO_PUPDR_PUPD3 | GPIO_PUPDR_PUPD5 | GPIO_PUPDR_PUPD12);
  32:Core/Src/init.c **** 
  33:Core/Src/init.c **** //     // ÈÖçÁΩÆGPIOCËæìÂÖ•ÂºïËÑöÔºàPC13, PC12Ôºâ
  34:Core/Src/init.c **** //     GPIOC->MODER &= ~(GPIO_MODER_MODE13 | GPIO_MODER_MODE12);
  35:Core/Src/init.c **** //     // GPIOC->PUPDR &= ~(GPIO_PUPDR_PUPD13 | GPIO_PUPDR_PUPD12);
  36:Core/Src/init.c **** // }
  37:Core/Src/init.c **** 
  38:Core/Src/init.c **** // void ProcessButtons(void) {
  39:Core/Src/init.c **** //     // Ê£ÄÊµãÊåâÈíÆ1 (PC13) - ËÆæÁΩÆÂêåÊó∂ÁÇπ‰∫ÆÁöÑLEDÊï∞Èáè
  40:Core/Src/init.c **** //     if (READ_BIT(GPIOC->IDR,GPIO_IDR_ID13) != 0) {
  41:Core/Src/init.c **** //         for (volatile int i = 0; i < 100000; i++); // ÁÆÄÂçïÂéªÊäñÂä®
  42:Core/Src/init.c **** //         if (READ_BIT(GPIOC->IDR,GPIO_IDR_ID13) != 0) {
  43:Core/Src/init.c **** //             led_count++;
  44:Core/Src/init.c **** //             if (led_count > 6) led_count = 1; // Âæ™ÁéØÂõûÂà∞1
  45:Core/Src/init.c **** //         }
  46:Core/Src/init.c **** //     }
  47:Core/Src/init.c **** 
  48:Core/Src/init.c **** //     // Ê£ÄÊµãÊåâÈíÆ2 (PC12) - ÊéßÂà∂LEDÁÇπ‰∫Æ/ÁÜÑÁÅ≠
  49:Core/Src/init.c **** //     if (READ_BIT(GPIOC->IDR,GPIO_IDR_ID12) != 0) {
  50:Core/Src/init.c **** //         for (volatile int i = 0; i < 100000; i++); // ÁÆÄÂçïÂéªÊäñÂä®
  51:Core/Src/init.c **** //         if (READ_BIT(GPIOC->IDR,GPIO_IDR_ID12) != 0) {
  52:Core/Src/init.c **** //             current_led += led_count;
  53:Core/Src/init.c **** //             if (current_led >= 6) {
  54:Core/Src/init.c **** //                 current_led = 0; // ÈáçÁΩÆÁä∂ÊÄÅ
  55:Core/Src/init.c **** //                 GPIOB->BSRR = (GPIO_BSRR_BR0 | GPIO_BSRR_BR7 | GPIO_BSRR_BR14 |
  56:Core/Src/init.c **** //                                GPIO_BSRR_BR3 | GPIO_BSRR_BR5 | GPIO_BSRR_BR4); // ÁÜÑÁÅ≠ÊâÄÊúâLE
  57:Core/Src/init.c **** //             } else {
  58:Core/Src/init.c **** //                 UpdateLEDs(current_led); // Êõ¥Êñ∞ÁÇπ‰∫ÆÁä∂ÊÄÅ
  59:Core/Src/init.c **** //             }
  60:Core/Src/init.c **** //         }
  61:Core/Src/init.c **** //     }
  62:Core/Src/init.c **** // }
  63:Core/Src/init.c **** 
  64:Core/Src/init.c **** // void UpdateLEDs(uint8_t count) {
  65:Core/Src/init.c **** //     // ÁÜÑÁÅ≠ÊâÄÊúâLED
  66:Core/Src/init.c **** //     GPIOB->BSRR = (GPIO_BSRR_BR0 | GPIO_BSRR_BR7 | GPIO_BSRR_BR14 |
  67:Core/Src/init.c **** //                     GPIO_BSRR_BR3 | GPIO_BSRR_BR5 | GPIO_BSRR_BR4);
  68:Core/Src/init.c **** 
  69:Core/Src/init.c **** //     // ÁÇπ‰∫ÆÊåáÂÆöÊï∞ÈáèÁöÑLED
  70:Core/Src/init.c **** //     if (count >= 1) GPIOB->BSRR = GPIO_BSRR_BS14;  // ÁÇπ‰∫ÆLED1
  71:Core/Src/init.c **** //     if (count >= 2) GPIOB->BSRR = GPIO_BSRR_BS7;  // ÁÇπ‰∫ÆLED2
  72:Core/Src/init.c **** //     if (count >= 3) GPIOB->BSRR = GPIO_BSRR_BS0;  // ÁÇπ‰∫ÆLED3
  73:Core/Src/init.c **** //     if (count >= 4) GPIOB->BSRR = GPIO_BSRR_BS3;  // ÁÇπ‰∫ÆLED4
  74:Core/Src/init.c **** //     if (count >= 5) GPIOB->BSRR = GPIO_BSRR_BS5;  // ÁÇπ‰∫ÆLED5
  75:Core/Src/init.c **** //     if (count >= 6) GPIOB->BSRR = GPIO_BSRR_BS4; // ÁÇπ‰∫ÆLED6
  76:Core/Src/init.c **** // }
  77:Core/Src/init.c **** 
  78:Core/Src/init.c **** #include "init.h" 
  79:Core/Src/init.c **** 
  80:Core/Src/init.c **** void GPIO_Ini_1(void){
  30              		.loc 2 80 22 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  81:Core/Src/init.c ****     SET_BIT(RCC_GPIO_EN, RCC_GPIOB_EN | RCC_GPIOC_EN); // ÂºÄÂêØGPIO B, GPIO C
ARM GAS  C:\Users\mono\AppData\Local\Temp\ccTOguEk.s 			page 3


  35              		.loc 2 81 5 view .LVU1
  36 0000 094A     		ldr	r2, .L2
  37 0002 D2F83038 		ldr	r3, [r2, #2096]
  38 0006 43F00603 		orr	r3, r3, #6
  39 000a C2F83038 		str	r3, [r2, #2096]
  82:Core/Src/init.c ****     SET_BIT(GPIOB_MODER, GPIOB_MODE_PIN7_OUT | GPIOB_MODE_PIN0_OUT | GPIOB_MODE_PIN14_OUT); // ËÆæÁ
  40              		.loc 2 82 5 view .LVU2
  41 000e 074B     		ldr	r3, .L2+4
  42 0010 D3F80024 		ldr	r2, [r3, #1024]
  43 0014 0649     		ldr	r1, .L2+8
  44 0016 0A43     		orrs	r2, r2, r1
  45 0018 C3F80024 		str	r2, [r3, #1024]
  83:Core/Src/init.c ****     SET_BIT(GPIOB_OTYPER, GPIOB_OTYPE_PIN7_PP | GPIOB_OTYPE_PIN0_PP | GPIOB_OTYPE_PIN14_PP); // ËÆæ
  46              		.loc 2 83 5 view .LVU3
  84:Core/Src/init.c ****     SET_BIT(GPIOB_OSPEEDR, GPIOB_OSPEED_PIN7_MID | GPIOB_OSPEED_PIN0_MID | GPIOB_OSPEED_PIN14_MID);
  47              		.loc 2 84 5 view .LVU4
  48 001c D3F80824 		ldr	r2, [r3, #1032]
  49 0020 0A43     		orrs	r2, r2, r1
  50 0022 C3F80824 		str	r2, [r3, #1032]
  85:Core/Src/init.c ****     SET_BIT(GPIOB_PUPDR, GPIOB_PUPDR_PIN7_NOPUPD | GPIOB_PUPDR_PIN0_NOPUPD | GPIOB_PUPDR_PIN14_NOPU
  51              		.loc 2 85 5 view .LVU5
  86:Core/Src/init.c **** 
  87:Core/Src/init.c **** }...
  52              		.loc 2 87 1 is_stmt 0 view .LVU6
  53 0026 7047     		bx	lr
  54              	.L3:
  55              		.align	2
  56              	.L2:
  57 0028 00300240 		.word	1073885184
  58 002c 00000240 		.word	1073872896
  59 0030 01400010 		.word	268451841
  60              		.cfi_endproc
  61              	.LFE130:
  63              		.section	.text.delay,"ax",%progbits
  64              		.align	1
  65              		.global	delay
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  70              	delay:
  71              	.LFB131:
   1:Core/Src/main.c **** // #include <stdint.h> 
   2:Core/Src/main.c **** // #include <init.h> 
   3:Core/Src/main.c **** 
   4:Core/Src/main.c **** // // // ÂáΩÊï∞Â£∞Êòé
   5:Core/Src/main.c **** // // void Init_GPIO(void);           // ÂàùÂßãÂåñGPIO
   6:Core/Src/main.c **** // // void ProcessButtons(void);      // Â§ÑÁêÜÊåâÈíÆËæìÂÖ•
   7:Core/Src/main.c **** // // void UpdateLEDs(uint8_t count); // Êõ¥Êñ∞LEDÁä∂ÊÄÅ
   8:Core/Src/main.c **** 
   9:Core/Src/main.c **** // // // ÂÖ®Â±ÄÂèòÈáè
  10:Core/Src/main.c **** // // volatile uint8_t led_count = 1;   // ÂΩìÂâçËÆæÂÆöÂêåÊó∂ÁÇπ‰∫ÆÁöÑLEDÊï∞Èáè
  11:Core/Src/main.c **** // // volatile uint8_t current_led = 0; // ÂΩìÂâçÂ∑≤ÁÇπ‰∫ÆÁöÑLEDÊï∞Èáè
  12:Core/Src/main.c **** // // volatile uint8_t offset = 0;      // ÂÅèÁßªÈáè
  13:Core/Src/main.c **** 
  14:Core/Src/main.c **** // // int main(void) {
  15:Core/Src/main.c **** // //     Init_GPIO(); // ÂàùÂßãÂåñGPIO
  16:Core/Src/main.c **** 
ARM GAS  C:\Users\mono\AppData\Local\Temp\ccTOguEk.s 			page 4


  17:Core/Src/main.c **** // //     while (1) {
  18:Core/Src/main.c **** // //         ProcessButtons(); // ÊåÅÁª≠Â§ÑÁêÜÊåâÈíÆÈÄªËæë
  19:Core/Src/main.c **** // //     }
  20:Core/Src/main.c **** // // }
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** // // void Init_GPIO(void) {
  23:Core/Src/main.c **** // //     // ÂêØÁî®GPIOBÂíåGPIOCÊó∂Èíü
  24:Core/Src/main.c **** // //     RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN | RCC_AHB1ENR_GPIOCEN;
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** // //     // ÈÖçÁΩÆGPIOB (PB0, PB7, PB14, PB8, PB9, PB10‰∏∫ËæìÂá∫Ê®°Âºè)
  27:Core/Src/main.c **** // //     GPIOB->MODER |= (GPIO_MODER_MODE0_0 | GPIO_MODER_MODE7_0 | GPIO_MODER_MODE14_0 |
  28:Core/Src/main.c **** // //                      GPIO_MODER_MODE8_0 | GPIO_MODER_MODE9_0 | GPIO_MODER_MODE10_0);
  29:Core/Src/main.c **** // //     GPIOB->OTYPER &= ~(GPIO_OTYPER_OT0 | GPIO_OTYPER_OT7 | GPIO_OTYPER_OT14 |
  30:Core/Src/main.c **** // //                        GPIO_OTYPER_OT8 | GPIO_OTYPER_OT9 | GPIO_OTYPER_OT10);
  31:Core/Src/main.c **** // //     GPIOB->OSPEEDR |= (GPIO_OSPEEDER_OSPEEDR0 | GPIO_OSPEEDER_OSPEEDR7 |
  32:Core/Src/main.c **** // //                        GPIO_OSPEEDER_OSPEEDR14 | GPIO_OSPEEDER_OSPEEDR8 |
  33:Core/Src/main.c **** // //                        GPIO_OSPEEDER_OSPEEDR9 | GPIO_OSPEEDER_OSPEEDR10);
  34:Core/Src/main.c **** // //     GPIOB->PUPDR &= ~(GPIO_PUPDR_PUPD0 | GPIO_PUPDR_PUPD7 | GPIO_PUPDR_PUPD14 |
  35:Core/Src/main.c **** // //                       GPIO_PUPDR_PUPD8 | GPIO_PUPDR_PUPD9 | GPIO_PUPDR_PUPD10);
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** // //     // ÈÖçÁΩÆGPIOC (PC6ÂíåPC12‰∏∫ËæìÂÖ•Ê®°Âºè)
  38:Core/Src/main.c **** // //     GPIOC->MODER &= ~(GPIO_MODER_MODE6 | GPIO_MODER_MODE12);
  39:Core/Src/main.c **** // //     GPIOC->PUPDR &= ~(GPIO_PUPDR_PUPD6 | GPIO_PUPDR_PUPD12);
  40:Core/Src/main.c **** // // }
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** // // void ProcessButtons(void) {
  43:Core/Src/main.c **** // //     // Â§ÑÁêÜÊåâÈíÆ1 (PC6) - ËÆæÁΩÆÂêåÊó∂ÁÇπ‰∫ÆLEDÊï∞Èáè
  44:Core/Src/main.c **** // //     if ((GPIOC->IDR & GPIO_IDR_ID6) != 0) {
  45:Core/Src/main.c **** // //         for (volatile int i = 0; i < 100000; i++); // ÁÆÄÂçïÂéªÊäñÂä®
  46:Core/Src/main.c **** // //         if ((GPIOC->IDR & GPIO_IDR_ID6) != 0) {
  47:Core/Src/main.c **** // //             led_count++;
  48:Core/Src/main.c **** // //             if (led_count > 6) led_count = 1; // Âæ™ÁéØÂõûÂà∞1
  49:Core/Src/main.c **** // //         }
  50:Core/Src/main.c **** // //     }
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** // //     // Â§ÑÁêÜÊåâÈíÆ2 (PC12) - ÊéßÂà∂LEDÁÇπ‰∫Æ/ÁÜÑÁÅ≠Âπ∂Ê∑ªÂä†ÂÅèÁßª
  53:Core/Src/main.c **** // //     if ((GPIOC->IDR & GPIO_IDR_ID12) != 0) {
  54:Core/Src/main.c **** // //         for (volatile int i = 0; i < 100000; i++); // ÁÆÄÂçïÂéªÊäñÂä®
  55:Core/Src/main.c **** // //         if ((GPIOC->IDR & GPIO_IDR_ID12) != 0) {
  56:Core/Src/main.c **** // //             offset ++; // ÂÅèÁßªÈáèÊØèÊ¨°Êåâ‰∏ãÊåâÈíÆ2ÂêéÈÄíÂ¢û
  57:Core/Src/main.c **** // //             //UpdateLEDs(led_count); // Ê†πÊçÆÂΩìÂâçËÆæÁΩÆÊï∞ÈáèÂíåÂÅèÁßªÊõ¥Êñ∞LED
  58:Core/Src/main.c **** // //         if(led_count == 6 & current_led == 0){
  59:Core/Src/main.c **** // //             current_led = 6;//ÈáçÁΩÆÁä∂ÊÄÅ
  60:Core/Src/main.c **** // //         }
  61:Core/Src/main.c **** // //         else if(led_count == 6 & current_led == 6)
  62:Core/Src/main.c **** // //         {
  63:Core/Src/main.c **** // //             current_led = 0;//ÈáçÁΩÆÁä∂ÊÄÅ
  64:Core/Src/main.c **** // //         }
  65:Core/Src/main.c **** // //         GPIOB->BSRR = (GPIO_BSRR_BR0 | GPIO_BSRR_BR7 | GPIO_BSRR_BR14 |
  66:Core/Src/main.c **** // //                    GPIO_BSRR_BR8 | GPIO_BSRR_BR9 | GPIO_BSRR_BR10);
  67:Core/Src/main.c **** // //     //ÁÜÑÁÅ≠ÊâÄÊâÄÊúâLEDÔºåÁÑ∂ÂêéÊ†πÊçÆÈúÄË¶ÅÈáç‰∫Æ
  68:Core/Src/main.c **** // //         if (offset >= (6-current_led))
  69:Core/Src/main.c **** // //         {
  70:Core/Src/main.c **** // //             offset = 0;//ËøôÊòØ‰∏çÊãêÂ§¥ÁöÑÔºåÂ¶Ç4ÁÅØÂàô0123Ôºå1234Ôºå2345ÔºõoffsetÂè™Êúâ0Ôºå
  71:Core/Src/main.c **** // //         }
  72:Core/Src/main.c **** // //         for(int  i = offset; i < offset+current_led;  i++)
  73:Core/Src/main.c **** // //         {
ARM GAS  C:\Users\mono\AppData\Local\Temp\ccTOguEk.s 			page 5


  74:Core/Src/main.c **** // //             LedOn(int i) //ÁÇπ‰∫ÆÁ¨¨i‰∏™ÁÅØ,Â¶Ç2ÁÅØÂàô01Ôºå12Ôºå23Ôºå34, 45ÔºõoffsetÊúâ0,1,2,
  75:Core/Src/main.c **** // //         }
  76:Core/Src/main.c **** // //         //UpdateLEDs(current_led); // Êõ¥Êñ∞ÁÇπ‰∫ÆÁä∂ÊÄÅÔºåcurrent_ledÊúâ1„ÄÅ2„ÄÅ3„ÄÅ4„ÄÅ5„ÄÅ
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** // //         }
  80:Core/Src/main.c **** // //     }
  81:Core/Src/main.c **** // // }
  82:Core/Src/main.c **** // // LedOn(int i) //ÁÇπ‰∫ÆÁ¨¨i‰∏™ÁÅØ
  83:Core/Src/main.c **** // // {
  84:Core/Src/main.c **** // // i += 1;
  85:Core/Src/main.c **** // // Switch(i)
  86:Core/Src/main.c **** // // {
  87:Core/Src/main.c **** // // case  1 : GPIOB->BSRR = GPIO_BSRR_BS0;  // ÁÇπ‰∫ÆLED1
  88:Core/Src/main.c **** // // case  2 : GPIOB->BSRR = GPIO_BSRR_BS7;  // ÁÇπ‰∫ÆLED2
  89:Core/Src/main.c **** // // case  3 : GPIOB->BSRR = GPIO_BSRR_BS14;  // ÁÇπ‰∫ÆLED3
  90:Core/Src/main.c **** // // case  4 : GPIOB->BSRR = GPIO_BSRR_BS8;  // ÁÇπ‰∫ÆLED4
  91:Core/Src/main.c **** // // case  5 : GPIOB->BSRR = GPIO_BSRR_BS9;  // ÁÇπ‰∫ÆLED5
  92:Core/Src/main.c **** // // case  6 : GPIOB->BSRR = GPIO_BSRR_BS10;  // ÁÇπ‰∫ÆLED6
  93:Core/Src/main.c **** // // else  return;
  94:Core/Src/main.c **** // // }
  95:Core/Src/main.c **** // // }
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** // // ‰øÆÊîπÂâç‰ª£Á†ÅÁöÑÁªìÂ∞æ
  98:Core/Src/main.c **** // // void UpdateLEDs(uint8_t count) {
  99:Core/Src/main.c **** // //     // ÂÖàÂÖ≥Èó≠ÊâÄÊúâLED
 100:Core/Src/main.c **** // //     GPIOB->BSRR = (GPIO_BSRR_BR0 | GPIO_BSRR_BR7 | GPIO_BSRR_BR14 |
 101:Core/Src/main.c **** // //                    GPIO_BSRR_BR8 | GPIO_BSRR_BR9 | GPIO_BSRR_BR10);
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** // //     // Ê†πÊçÆÊï∞ÈáèÂíåÂÅèÁßªÈáèÁÇπ‰∫ÆÂØπÂ∫îLED
 104:Core/Src/main.c **** // //     uint8_t leds[6] = {GPIO_BSRR_BS0, GPIO_BSRR_BS7, GPIO_BSRR_BS14, GPIO_BSRR_BS8, GPIO_BSRR
 105:Core/Src/main.c **** // //     for (uint8_t i = 0; i < count; i++) {
 106:Core/Src/main.c **** // //         GPIOB->BSRR = leds[(i + offset) % 6]; // Ê†πÊçÆÂÅèÁßªËÆ°ÁÆóÁÇπ‰∫Æ‰ΩçÁΩÆ
 107:Core/Src/main.c **** // //     }
 108:Core/Src/main.c **** // // }
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** // // ÂáΩÊï∞Â£∞Êòé(Ê≠£Á°Æ‰∏ÄÂçäÔºå45ÁÅØÊúâÈóÆÈ¢òÊó†Ê≥ïÂÆûÁé∞ÂÅèÁßª)
 114:Core/Src/main.c **** // void Init_GPIO(void);           // ÂàùÂßãÂåñGPIO
 115:Core/Src/main.c **** // void ProcessButtons(void);      // Â§ÑÁêÜÊåâÈíÆËæìÂÖ•
 116:Core/Src/main.c **** // void UpdateLEDs(uint8_t count); // Êõ¥Êñ∞LEDÁä∂ÊÄÅ
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** // volatile uint8_t led_count = 1;  // ÂΩìÂâçËÆæÂÆöÂêåÊó∂ÁÇπ‰∫ÆÁöÑLEDÊï∞Èáè
 119:Core/Src/main.c **** // volatile uint8_t current_led = 0; // ÂΩìÂâçÂ∑≤ÁÇπ‰∫ÆÁöÑLEDÊï∞Èáè
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** // int main(void) {
 122:Core/Src/main.c **** //     Init_GPIO(); // ÂàùÂßãÂåñGPIO
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** //     while (1) {
 125:Core/Src/main.c **** //         ProcessButtons(); // Âæ™ÁéØÂ§ÑÁêÜÊåâÈíÆÈÄªËæë
 126:Core/Src/main.c **** //     }
 127:Core/Src/main.c **** // }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** // void Init_GPIO(void) {
 130:Core/Src/main.c **** //     // ÂêØÁî®GPIOBÂíåGPIOCÊó∂Èíü
ARM GAS  C:\Users\mono\AppData\Local\Temp\ccTOguEk.s 			page 6


 131:Core/Src/main.c **** //     RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN | RCC_AHB1ENR_GPIOCEN;
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** //     // ÈÖçÁΩÆGPIOB (PB0, PB7, PB14, PB8, PB9, PB10‰∏∫ËæìÂá∫Ê®°Âºè)
 134:Core/Src/main.c **** //     GPIOB->MODER |= (GPIO_MODER_MODE0_0 | GPIO_MODER_MODE7_0 | GPIO_MODER_MODE14_0 |
 135:Core/Src/main.c **** //                      GPIO_MODER_MODE8_0 | GPIO_MODER_MODE9_0 | GPIO_MODER_MODE10_0);
 136:Core/Src/main.c **** //     GPIOB->OTYPER &= ~(GPIO_OTYPER_OT0 | GPIO_OTYPER_OT7 | GPIO_OTYPER_OT14 |
 137:Core/Src/main.c **** //                        GPIO_OTYPER_OT8 | GPIO_OTYPER_OT9 | GPIO_OTYPER_OT10);
 138:Core/Src/main.c **** //     GPIOB->OSPEEDR |= (GPIO_OSPEEDER_OSPEEDR0 | GPIO_OSPEEDER_OSPEEDR7 |
 139:Core/Src/main.c **** //                        GPIO_OSPEEDER_OSPEEDR14 | GPIO_OSPEEDER_OSPEEDR8 |
 140:Core/Src/main.c **** //                        GPIO_OSPEEDER_OSPEEDR9 | GPIO_OSPEEDER_OSPEEDR10);
 141:Core/Src/main.c **** //     GPIOB->PUPDR &= ~(GPIO_PUPDR_PUPD0 | GPIO_PUPDR_PUPD7 | GPIO_PUPDR_PUPD14 |
 142:Core/Src/main.c **** //                       GPIO_PUPDR_PUPD8 | GPIO_PUPDR_PUPD9 | GPIO_PUPDR_PUPD10);
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** //     // ÈÖçÁΩÆGPIOC (PC13ÂíåPC12‰∏∫ËæìÂÖ•Ê®°Âºè)
 145:Core/Src/main.c **** //     GPIOC->MODER &= ~(GPIO_MODER_MODE13 | GPIO_MODER_MODE12);
 146:Core/Src/main.c **** //     GPIOC->PUPDR &= ~(GPIO_PUPDR_PUPD13 | GPIO_PUPDR_PUPD12);
 147:Core/Src/main.c **** // }
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** // void ProcessButtons(void) {
 150:Core/Src/main.c **** //     // Â§ÑÁêÜÊåâÈíÆ1 (PC6) - ËÆæÁΩÆÂêåÊó∂ÁÇπ‰∫ÆLEDÊï∞Èáè
 151:Core/Src/main.c **** //     if ((GPIOC->IDR & GPIO_IDR_ID6) != 0) {
 152:Core/Src/main.c **** //         for (volatile int i = 0; i < 100000; i++); // ÁÆÄÂçïÂéªÊäñÂä®
 153:Core/Src/main.c **** //         if ((GPIOC->IDR & GPIO_IDR_ID6) == 0) {
 154:Core/Src/main.c **** //             led_count++;
 155:Core/Src/main.c **** //             if (led_count > 6) led_count = 1; // Âæ™ÁéØÂõûÂà∞1
 156:Core/Src/main.c **** //         }
 157:Core/Src/main.c **** //     }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** //     // Â§ÑÁêÜÊåâÈíÆ2 (PC12) - ÊéßÂà∂LEDÁÇπ‰∫Æ/ÁÜÑÁÅ≠
 160:Core/Src/main.c **** //     if ((GPIOC->IDR & GPIO_IDR_ID12) != 0) {
 161:Core/Src/main.c **** //         for (volatile int i = 0; i < 100000; i++); // ÁÆÄÂçïÂéªÊäñÂä®
 162:Core/Src/main.c **** //         if ((GPIOC->IDR & GPIO_IDR_ID12) == 0) {
 163:Core/Src/main.c **** //             current_led += led_count;
 164:Core/Src/main.c **** //             if (current_led > 6) {
 165:Core/Src/main.c **** //                 current_led = 0; // ÈáçÁΩÆÁä∂ÊÄÅ
 166:Core/Src/main.c **** //                 GPIOB->BSRR = (GPIO_BSRR_BR0 | GPIO_BSRR_BR7 | GPIO_BSRR_BR14 |
 167:Core/Src/main.c **** //                                GPIO_BSRR_BR8 | GPIO_BSRR_BR9 | GPIO_BSRR_BR10); // ÁÜÑÁÅ≠ÊâÄÊúâL
 168:Core/Src/main.c **** //             } else {
 169:Core/Src/main.c **** //                 UpdateLEDs(current_led); // Êõ¥Êñ∞ÁÇπ‰∫ÆÁä∂ÊÄÅ
 170:Core/Src/main.c **** //             }
 171:Core/Src/main.c **** //         }
 172:Core/Src/main.c **** //     }
 173:Core/Src/main.c **** // }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** // void UpdateLEDs(uint8_t count) {
 176:Core/Src/main.c **** //     // ÂÖàÂÖ≥Èó≠ÊâÄÊúâLED
 177:Core/Src/main.c **** //     GPIOB->BSRR = (GPIO_BSRR_BR0 | GPIO_BSRR_BR7 | GPIO_BSRR_BR14 |
 178:Core/Src/main.c **** //                    GPIO_BSRR_BR8 | GPIO_BSRR_BR9 | GPIO_BSRR_BR10);
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** //     // Ê†πÊçÆÊï∞ÈáèÁÇπ‰∫ÆÂØπÂ∫îLED
 181:Core/Src/main.c **** //     if (count >= 1) GPIOB->BSRR = GPIO_BSRR_BS0;  // ÁÇπ‰∫ÆLED1
 182:Core/Src/main.c **** //     if (count >= 2) GPIOB->BSRR = GPIO_BSRR_BS7;  // ÁÇπ‰∫ÆLED2
 183:Core/Src/main.c **** //     if (count >= 3) GPIOB->BSRR = GPIO_BSRR_BS14; // ÁÇπ‰∫ÆLED3
 184:Core/Src/main.c **** //     if (count >= 4) GPIOB->BSRR = GPIO_BSRR_BS8;  // ÁÇπ‰∫ÆLED4
 185:Core/Src/main.c **** //     if (count >= 5) GPIOB->BSRR = GPIO_BSRR_BS9;  // ÁÇπ‰∫ÆLED5
 186:Core/Src/main.c **** //     if (count >= 6) GPIOB->BSRR = GPIO_BSRR_BS10; // ÁÇπ‰∫ÆLED6
 187:Core/Src/main.c **** // }
ARM GAS  C:\Users\mono\AppData\Local\Temp\ccTOguEk.s 			page 7


 188:Core/Src/main.c **** // Ê≠£Á°Æ‰ª£Á†ÅÁªìÊùü
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** #include <stdint.h> 
 197:Core/Src/main.c **** #include "init.h" 
 198:Core/Src/main.c **** #include "init.c" 
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** 
 201:Core/Src/main.c **** uint8_t led_state = 0; // LED Áä∂ÊÄÅÂèòÈáè
 202:Core/Src/main.c **** uint8_t button1_pressed = 0; // ÊåâÈíÆ1Áä∂ÊÄÅÂèòÈáè
 203:Core/Src/main.c **** uint8_t button2_pressed = 0; // ÊåâÈíÆ2Áä∂ÊÄÅÂèòÈáè
 204:Core/Src/main.c **** uint8_t mode = 0; // ÊåâÈíÆ2ÁöÑÂ∑•‰ΩúÊ®°ÂºèÔºå0: ÂºÄÂêØLEDÔºå1: ÂÖ≥Èó≠LED
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** uint8_t button1_flag;
 207:Core/Src/main.c **** uint8_t button2_flag;
 208:Core/Src/main.c **** 
 209:Core/Src/main.c **** #define DEBOUNCE_DELAY 200 // Èò≤ÊäñÂª∂ËøüÊó∂Èó¥ÔºåÂçï‰Ωç‰∏∫ÊØ´Áßí
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** void delay(uint32_t s){
  72              		.loc 1 211 23 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77              	.LVL0:
  78              	.L5:
 212:Core/Src/main.c ****     while(s--);
  79              		.loc 1 212 11 discriminator 1 view .LVU8
  80 0000 0346     		mov	r3, r0
  81              	.LVL1:
  82              		.loc 1 212 12 is_stmt 0 discriminator 1 view .LVU9
  83 0002 0138     		subs	r0, r0, #1
  84              	.LVL2:
  85              		.loc 1 212 11 discriminator 1 view .LVU10
  86 0004 002B     		cmp	r3, #0
  87 0006 FBD1     		bne	.L5
 213:Core/Src/main.c **** }
  88              		.loc 1 213 1 view .LVU11
  89 0008 7047     		bx	lr
  90              		.cfi_endproc
  91              	.LFE131:
  93              		.section	.text.main,"ax",%progbits
  94              		.align	1
  95              		.global	main
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	main:
 101              	.LFB132:
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** int main(void) {
 102              		.loc 1 215 16 is_stmt 1 view -0
ARM GAS  C:\Users\mono\AppData\Local\Temp\ccTOguEk.s 			page 8


 103              		.cfi_startproc
 104              		@ Volatile: function does not return.
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107 0000 08B5     		push	{r3, lr}
 108              	.LCFI0:
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 3, -8
 111              		.cfi_offset 14, -4
 216:Core/Src/main.c ****     GPIO_Ini_1(); // ÂàùÂßãÂåñGPIOÁ´ØÂè£
 112              		.loc 1 216 5 view .LVU13
 113 0002 FFF7FEFF 		bl	GPIO_Ini_1
 114              	.LVL3:
 115 0006 54E0     		b	.L19
 116              	.L7:
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****     while (1) {
 219:Core/Src/main.c ****         // Ê£ÄÊü•ÊåâÈíÆ1Áä∂ÊÄÅÔºàPC12Ôºâ
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****          button1_flag =! button1_pressed;
 222:Core/Src/main.c ****          button2_flag =! button2_pressed;
 223:Core/Src/main.c ****         if ((READ_BIT(GPIOC_IDR, GPIOC_IDR_PIN12) != 0) && !button1_pressed) { // ÊåâÈíÆ1Êåâ‰∏ãÊó∂Ô
 224:Core/Src/main.c ****             delay(DEBOUNCE_DELAY); // Èò≤ÊäñÂª∂Ëøü
 225:Core/Src/main.c ****             if (READ_BIT(GPIOC_IDR, GPIOC_IDR_PIN12) != 0) {
 226:Core/Src/main.c ****                 mode ^= 1; // ÂàáÊç¢Ê®°Âºè
 227:Core/Src/main.c ****                 button1_pressed = 1; // Êõ¥Êñ∞ÊåâÈíÆÁä∂ÊÄÅ‰∏∫Â∑≤Êåâ‰∏ã
 228:Core/Src/main.c ****             }
 229:Core/Src/main.c ****         } else if (READ_BIT(GPIOC_IDR, GPIOC_IDR_PIN12) == 0) {
 117              		.loc 1 229 16 view .LVU14
 118              		.loc 1 229 19 is_stmt 0 view .LVU15
 119 0008 08B9     		cbnz	r0, .L8
 230:Core/Src/main.c ****             button1_pressed = 0; // ÈáçÁΩÆÊåâÈíÆÁä∂ÊÄÅ
 120              		.loc 1 230 13 is_stmt 1 view .LVU16
 121              		.loc 1 230 29 is_stmt 0 view .LVU17
 122 000a 3949     		ldr	r1, .L24
 123 000c 0870     		strb	r0, [r1]
 124              	.L8:
 231:Core/Src/main.c ****         }
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****         // Ê£ÄÊü•ÊåâÈíÆ2Áä∂ÊÄÅÔºàPC13Ôºâ
 234:Core/Src/main.c ****         if ((READ_BIT(GPIOC_IDR, GPIOC_IDR_PIN13) == 0) && !button2_pressed) { // ÊåâÈíÆ2Êåâ‰∏ãÊó∂Ô
 125              		.loc 1 234 9 is_stmt 1 view .LVU18
 126              		.loc 1 234 12 is_stmt 0 view .LVU19
 127 000e 13F40053 		ands	r3, r3, #8192
 128 0012 4AD1     		bne	.L9
 129              		.loc 1 234 57 discriminator 1 view .LVU20
 130 0014 002A     		cmp	r2, #0
 131 0016 48D1     		bne	.L9
 235:Core/Src/main.c ****             delay(DEBOUNCE_DELAY); // Èò≤ÊäñÂª∂Ëøü
 132              		.loc 1 235 13 is_stmt 1 view .LVU21
 236:Core/Src/main.c ****             if (READ_BIT(GPIOC_IDR, GPIOC_IDR_PIN13) == 0) {
 133              		.loc 1 236 13 view .LVU22
 237:Core/Src/main.c ****                 // Ê†πÊçÆÊ®°ÂºèÂàáÊç¢LEDÁä∂ÊÄÅ
 238:Core/Src/main.c ****                 if (mode == 0) { // ÊâìÂºÄÊ®°Âºè
 134              		.loc 1 238 17 view .LVU23
 135              		.loc 1 238 26 is_stmt 0 view .LVU24
 136 0018 364B     		ldr	r3, .L24+4
ARM GAS  C:\Users\mono\AppData\Local\Temp\ccTOguEk.s 			page 9


 137 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 138              		.loc 1 238 20 view .LVU25
 139 001c 33BB     		cbnz	r3, .L10
 239:Core/Src/main.c ****                     if (led_state < 3) {
 140              		.loc 1 239 21 is_stmt 1 view .LVU26
 141              		.loc 1 239 35 is_stmt 0 view .LVU27
 142 001e 364B     		ldr	r3, .L24+8
 143 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 144              		.loc 1 239 24 view .LVU28
 145 0022 022B     		cmp	r3, #2
 146 0024 0AD8     		bhi	.L11
 240:Core/Src/main.c ****                         if (led_state == 0) {
 147              		.loc 1 240 25 is_stmt 1 view .LVU29
 148              		.loc 1 240 28 is_stmt 0 view .LVU30
 149 0026 6BB9     		cbnz	r3, .L12
 241:Core/Src/main.c ****                             SET_BIT(GPIOB_BSRR, GPIOB_BSRR_PIN0_SET); // ÁÇπ‰∫Æ LED1
 150              		.loc 1 241 29 is_stmt 1 view .LVU31
 151 0028 3449     		ldr	r1, .L24+12
 152 002a D1F81824 		ldr	r2, [r1, #1048]
 153 002e 42F00102 		orr	r2, r2, #1
 154 0032 C1F81824 		str	r2, [r1, #1048]
 155              	.L13:
 242:Core/Src/main.c ****                         } else if (led_state == 1) {
 243:Core/Src/main.c ****                             SET_BIT(GPIOB_BSRR, GPIOB_BSRR_PIN7_SET); // ÁÇπ‰∫Æ LED2
 244:Core/Src/main.c ****                         } else if (led_state == 2) {
 245:Core/Src/main.c ****                             SET_BIT(GPIOB_BSRR, GPIOB_BSRR_PIN14_SET); // ÁÇπ‰∫Æ LED3
 246:Core/Src/main.c ****                         }
 247:Core/Src/main.c ****                         led_state++; // Êõ¥Êñ∞Áä∂ÊÄÅ
 156              		.loc 1 247 25 view .LVU32
 157              		.loc 1 247 34 is_stmt 0 view .LVU33
 158 0036 0133     		adds	r3, r3, #1
 159 0038 2F4A     		ldr	r2, .L24+8
 160 003a 1370     		strb	r3, [r2]
 161              	.L11:
 248:Core/Src/main.c ****                     }
 249:Core/Src/main.c ****                 } else { // ÂÖ≥Èó≠Ê®°Âºè
 250:Core/Src/main.c ****                     if (led_state > 0) {
 251:Core/Src/main.c ****                         if (led_state == 1) {
 252:Core/Src/main.c ****                             SET_BIT(GPIOB->BSRR, GPIO_BSRR_BR0); // ÁÜÑÁÅ≠ LED1
 253:Core/Src/main.c ****                         } else if (led_state == 2) {
 254:Core/Src/main.c ****                             SET_BIT(GPIOB->BSRR, GPIO_BSRR_BR7); // ÁÜÑÁÅ≠ LED2
 255:Core/Src/main.c ****                         } else if (led_state == 3) {
 256:Core/Src/main.c ****                             SET_BIT(GPIOB->BSRR, GPIO_BSRR_BR14); // ÁÜÑÁÅ≠ LED3
 257:Core/Src/main.c ****                         }
 258:Core/Src/main.c ****                         led_state--; // Êõ¥Êñ∞Áä∂ÊÄÅ
 259:Core/Src/main.c ****                     }
 260:Core/Src/main.c ****                 }
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****                 button2_pressed = 1; // Êõ¥Êñ∞ÊåâÈíÆÁä∂ÊÄÅ‰∏∫Â∑≤Êåâ‰∏ã
 162              		.loc 1 262 17 is_stmt 1 view .LVU34
 163              		.loc 1 262 33 is_stmt 0 view .LVU35
 164 003c 304B     		ldr	r3, .L24+16
 165 003e 0122     		movs	r2, #1
 166 0040 1A70     		strb	r2, [r3]
 167 0042 36E0     		b	.L19
 168              	.L12:
 242:Core/Src/main.c ****                         } else if (led_state == 1) {
ARM GAS  C:\Users\mono\AppData\Local\Temp\ccTOguEk.s 			page 10


 169              		.loc 1 242 32 is_stmt 1 view .LVU36
 242:Core/Src/main.c ****                         } else if (led_state == 1) {
 170              		.loc 1 242 35 is_stmt 0 view .LVU37
 171 0044 012B     		cmp	r3, #1
 172 0046 09D0     		beq	.L21
 244:Core/Src/main.c ****                             SET_BIT(GPIOB_BSRR, GPIOB_BSRR_PIN14_SET); // ÁÇπ‰∫Æ LED3
 173              		.loc 1 244 32 is_stmt 1 view .LVU38
 244:Core/Src/main.c ****                             SET_BIT(GPIOB_BSRR, GPIOB_BSRR_PIN14_SET); // ÁÇπ‰∫Æ LED3
 174              		.loc 1 244 35 is_stmt 0 view .LVU39
 175 0048 022B     		cmp	r3, #2
 176 004a F4D1     		bne	.L13
 245:Core/Src/main.c ****                         }
 177              		.loc 1 245 29 is_stmt 1 view .LVU40
 178 004c 2B49     		ldr	r1, .L24+12
 179 004e D1F81824 		ldr	r2, [r1, #1048]
 180 0052 42F48042 		orr	r2, r2, #16384
 181 0056 C1F81824 		str	r2, [r1, #1048]
 182 005a ECE7     		b	.L13
 183              	.L21:
 243:Core/Src/main.c ****                         } else if (led_state == 2) {
 184              		.loc 1 243 29 view .LVU41
 185 005c 2749     		ldr	r1, .L24+12
 186 005e D1F81824 		ldr	r2, [r1, #1048]
 187 0062 42F08002 		orr	r2, r2, #128
 188 0066 C1F81824 		str	r2, [r1, #1048]
 189 006a E4E7     		b	.L13
 190              	.L10:
 250:Core/Src/main.c ****                         if (led_state == 1) {
 191              		.loc 1 250 21 view .LVU42
 250:Core/Src/main.c ****                         if (led_state == 1) {
 192              		.loc 1 250 35 is_stmt 0 view .LVU43
 193 006c 224B     		ldr	r3, .L24+8
 194 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 250:Core/Src/main.c ****                         if (led_state == 1) {
 195              		.loc 1 250 24 view .LVU44
 196 0070 002B     		cmp	r3, #0
 197 0072 E3D0     		beq	.L11
 251:Core/Src/main.c ****                             SET_BIT(GPIOB->BSRR, GPIO_BSRR_BR0); // ÁÜÑÁÅ≠ LED1
 198              		.loc 1 251 25 is_stmt 1 view .LVU45
 251:Core/Src/main.c ****                             SET_BIT(GPIOB->BSRR, GPIO_BSRR_BR0); // ÁÜÑÁÅ≠ LED1
 199              		.loc 1 251 28 is_stmt 0 view .LVU46
 200 0074 012B     		cmp	r3, #1
 201 0076 09D0     		beq	.L22
 253:Core/Src/main.c ****                             SET_BIT(GPIOB->BSRR, GPIO_BSRR_BR7); // ÁÜÑÁÅ≠ LED2
 202              		.loc 1 253 32 is_stmt 1 view .LVU47
 253:Core/Src/main.c ****                             SET_BIT(GPIOB->BSRR, GPIO_BSRR_BR7); // ÁÜÑÁÅ≠ LED2
 203              		.loc 1 253 35 is_stmt 0 view .LVU48
 204 0078 022B     		cmp	r3, #2
 205 007a 10D0     		beq	.L23
 255:Core/Src/main.c ****                             SET_BIT(GPIOB->BSRR, GPIO_BSRR_BR14); // ÁÜÑÁÅ≠ LED3
 206              		.loc 1 255 32 is_stmt 1 view .LVU49
 255:Core/Src/main.c ****                             SET_BIT(GPIOB->BSRR, GPIO_BSRR_BR14); // ÁÜÑÁÅ≠ LED3
 207              		.loc 1 255 35 is_stmt 0 view .LVU50
 208 007c 032B     		cmp	r3, #3
 209 007e 0AD1     		bne	.L16
 256:Core/Src/main.c ****                         }
 210              		.loc 1 256 29 is_stmt 1 view .LVU51
ARM GAS  C:\Users\mono\AppData\Local\Temp\ccTOguEk.s 			page 11


 211 0080 2049     		ldr	r1, .L24+20
 212 0082 8A69     		ldr	r2, [r1, #24]
 213 0084 42F08042 		orr	r2, r2, #1073741824
 214 0088 8A61     		str	r2, [r1, #24]
 215 008a 04E0     		b	.L16
 216              	.L22:
 252:Core/Src/main.c ****                         } else if (led_state == 2) {
 217              		.loc 1 252 29 view .LVU52
 218 008c 1D49     		ldr	r1, .L24+20
 219 008e 8A69     		ldr	r2, [r1, #24]
 220 0090 42F48032 		orr	r2, r2, #65536
 221 0094 8A61     		str	r2, [r1, #24]
 222              	.L16:
 258:Core/Src/main.c ****                     }
 223              		.loc 1 258 25 view .LVU53
 258:Core/Src/main.c ****                     }
 224              		.loc 1 258 34 is_stmt 0 view .LVU54
 225 0096 013B     		subs	r3, r3, #1
 226 0098 174A     		ldr	r2, .L24+8
 227 009a 1370     		strb	r3, [r2]
 228 009c CEE7     		b	.L11
 229              	.L23:
 254:Core/Src/main.c ****                         } else if (led_state == 3) {
 230              		.loc 1 254 29 is_stmt 1 view .LVU55
 231 009e 1949     		ldr	r1, .L24+20
 232 00a0 8A69     		ldr	r2, [r1, #24]
 233 00a2 42F40002 		orr	r2, r2, #8388608
 234 00a6 8A61     		str	r2, [r1, #24]
 235 00a8 F5E7     		b	.L16
 236              	.L9:
 263:Core/Src/main.c ****             }
 264:Core/Src/main.c ****         } else if (READ_BIT(GPIOC_IDR, GPIOC_IDR_PIN13) != 0) {
 237              		.loc 1 264 16 view .LVU56
 238              		.loc 1 264 19 is_stmt 0 view .LVU57
 239 00aa 13B1     		cbz	r3, .L19
 265:Core/Src/main.c ****             button2_pressed = 0; // ÈáçÁΩÆÊåâÈíÆÁä∂ÊÄÅ
 240              		.loc 1 265 13 is_stmt 1 view .LVU58
 241              		.loc 1 265 29 is_stmt 0 view .LVU59
 242 00ac 144B     		ldr	r3, .L24+16
 243 00ae 0022     		movs	r2, #0
 244 00b0 1A70     		strb	r2, [r3]
 266:Core/Src/main.c ****         }
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****         delay(20000); // Âª∂Êó∂ÔºåÈò≤Ê≠¢Âø´ÈÄüÂæ™ÁéØ
 245              		.loc 1 268 9 is_stmt 1 view .LVU60
 218:Core/Src/main.c ****         // Ê£ÄÊü•ÊåâÈíÆ1Áä∂ÊÄÅÔºàPC12Ôºâ
 246              		.loc 1 218 11 view .LVU61
 247              	.L19:
 218:Core/Src/main.c ****         // Ê£ÄÊü•ÊåâÈíÆ1Áä∂ÊÄÅÔºàPC12Ôºâ
 248              		.loc 1 218 5 view .LVU62
 221:Core/Src/main.c ****          button2_flag =! button2_pressed;
 249              		.loc 1 221 10 view .LVU63
 221:Core/Src/main.c ****          button2_flag =! button2_pressed;
 250              		.loc 1 221 24 is_stmt 0 view .LVU64
 251 00b2 0F4B     		ldr	r3, .L24
 252 00b4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 253 00b6 B1FA81F3 		clz	r3, r1
ARM GAS  C:\Users\mono\AppData\Local\Temp\ccTOguEk.s 			page 12


 254 00ba 5B09     		lsrs	r3, r3, #5
 221:Core/Src/main.c ****          button2_flag =! button2_pressed;
 255              		.loc 1 221 23 view .LVU65
 256 00bc 124A     		ldr	r2, .L24+24
 257 00be 1370     		strb	r3, [r2]
 222:Core/Src/main.c ****         if ((READ_BIT(GPIOC_IDR, GPIOC_IDR_PIN12) != 0) && !button1_pressed) { // ÊåâÈíÆ1Êåâ‰∏ãÊó∂Ô
 258              		.loc 1 222 10 is_stmt 1 view .LVU66
 222:Core/Src/main.c ****         if ((READ_BIT(GPIOC_IDR, GPIOC_IDR_PIN12) != 0) && !button1_pressed) { // ÊåâÈíÆ1Êåâ‰∏ãÊó∂Ô
 259              		.loc 1 222 24 is_stmt 0 view .LVU67
 260 00c0 0F4B     		ldr	r3, .L24+16
 261 00c2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 262 00c4 B2FA82F3 		clz	r3, r2
 263 00c8 5B09     		lsrs	r3, r3, #5
 222:Core/Src/main.c ****         if ((READ_BIT(GPIOC_IDR, GPIOC_IDR_PIN12) != 0) && !button1_pressed) { // ÊåâÈíÆ1Êåâ‰∏ãÊó∂Ô
 264              		.loc 1 222 23 view .LVU68
 265 00ca 1048     		ldr	r0, .L24+28
 266 00cc 0370     		strb	r3, [r0]
 223:Core/Src/main.c ****             delay(DEBOUNCE_DELAY); // Èò≤ÊäñÂª∂Ëøü
 267              		.loc 1 223 9 is_stmt 1 view .LVU69
 223:Core/Src/main.c ****             delay(DEBOUNCE_DELAY); // Èò≤ÊäñÂª∂Ëøü
 268              		.loc 1 223 14 is_stmt 0 view .LVU70
 269 00ce 0B4B     		ldr	r3, .L24+12
 270 00d0 D3F81038 		ldr	r3, [r3, #2064]
 223:Core/Src/main.c ****             delay(DEBOUNCE_DELAY); // Èò≤ÊäñÂª∂Ëøü
 271              		.loc 1 223 12 view .LVU71
 272 00d4 13F48050 		ands	r0, r3, #4096
 273 00d8 96D0     		beq	.L7
 223:Core/Src/main.c ****             delay(DEBOUNCE_DELAY); // Èò≤ÊäñÂª∂Ëøü
 274              		.loc 1 223 57 discriminator 1 view .LVU72
 275 00da 0029     		cmp	r1, #0
 276 00dc 94D1     		bne	.L7
 224:Core/Src/main.c ****             if (READ_BIT(GPIOC_IDR, GPIOC_IDR_PIN12) != 0) {
 277              		.loc 1 224 13 is_stmt 1 view .LVU73
 225:Core/Src/main.c ****                 mode ^= 1; // ÂàáÊç¢Ê®°Âºè
 278              		.loc 1 225 13 view .LVU74
 226:Core/Src/main.c ****                 button1_pressed = 1; // Êõ¥Êñ∞ÊåâÈíÆÁä∂ÊÄÅ‰∏∫Â∑≤Êåâ‰∏ã
 279              		.loc 1 226 17 view .LVU75
 226:Core/Src/main.c ****                 button1_pressed = 1; // Êõ¥Êñ∞ÊåâÈíÆÁä∂ÊÄÅ‰∏∫Â∑≤Êåâ‰∏ã
 280              		.loc 1 226 22 is_stmt 0 view .LVU76
 281 00de 0548     		ldr	r0, .L24+4
 282 00e0 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 283 00e2 81F00101 		eor	r1, r1, #1
 284 00e6 0170     		strb	r1, [r0]
 227:Core/Src/main.c ****             }
 285              		.loc 1 227 17 is_stmt 1 view .LVU77
 227:Core/Src/main.c ****             }
 286              		.loc 1 227 33 is_stmt 0 view .LVU78
 287 00e8 0149     		ldr	r1, .L24
 288 00ea 0120     		movs	r0, #1
 289 00ec 0870     		strb	r0, [r1]
 290 00ee 8EE7     		b	.L8
 291              	.L25:
 292              		.align	2
 293              	.L24:
 294 00f0 00000000 		.word	button1_pressed
 295 00f4 00000000 		.word	mode
 296 00f8 00000000 		.word	led_state
ARM GAS  C:\Users\mono\AppData\Local\Temp\ccTOguEk.s 			page 13


 297 00fc 00000240 		.word	1073872896
 298 0100 00000000 		.word	button2_pressed
 299 0104 00040240 		.word	1073873920
 300 0108 00000000 		.word	button1_flag
 301 010c 00000000 		.word	button2_flag
 302              		.cfi_endproc
 303              	.LFE132:
 305              		.global	button2_flag
 306              		.section	.bss.button2_flag,"aw",%nobits
 309              	button2_flag:
 310 0000 00       		.space	1
 311              		.global	button1_flag
 312              		.section	.bss.button1_flag,"aw",%nobits
 315              	button1_flag:
 316 0000 00       		.space	1
 317              		.global	mode
 318              		.section	.bss.mode,"aw",%nobits
 321              	mode:
 322 0000 00       		.space	1
 323              		.global	button2_pressed
 324              		.section	.bss.button2_pressed,"aw",%nobits
 327              	button2_pressed:
 328 0000 00       		.space	1
 329              		.global	button1_pressed
 330              		.section	.bss.button1_pressed,"aw",%nobits
 333              	button1_pressed:
 334 0000 00       		.space	1
 335              		.global	led_state
 336              		.section	.bss.led_state,"aw",%nobits
 339              	led_state:
 340 0000 00       		.space	1
 341              		.text
 342              	.Letext0:
 343              		.file 3 "D:/STM_32/gcc_download/SysGCC/arm-none-eabi/include/machine/_default_types.h"
 344              		.file 4 "D:/STM_32/gcc_download/SysGCC/arm-none-eabi/include/sys/_stdint.h"
 345              		.file 5 "Core/Inc/../../CMSIS/Devices/stm32f429xx.h"
ARM GAS  C:\Users\mono\AppData\Local\Temp\ccTOguEk.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:21     .text.GPIO_Ini_1:00000000 $t
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:27     .text.GPIO_Ini_1:00000000 GPIO_Ini_1
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:57     .text.GPIO_Ini_1:00000028 $d
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:64     .text.delay:00000000 $t
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:70     .text.delay:00000000 delay
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:94     .text.main:00000000 $t
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:100    .text.main:00000000 main
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:294    .text.main:000000f0 $d
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:333    .bss.button1_pressed:00000000 button1_pressed
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:321    .bss.mode:00000000 mode
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:339    .bss.led_state:00000000 led_state
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:327    .bss.button2_pressed:00000000 button2_pressed
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:315    .bss.button1_flag:00000000 button1_flag
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:309    .bss.button2_flag:00000000 button2_flag
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:310    .bss.button2_flag:00000000 $d
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:316    .bss.button1_flag:00000000 $d
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:322    .bss.mode:00000000 $d
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:328    .bss.button2_pressed:00000000 $d
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:334    .bss.button1_pressed:00000000 $d
C:\Users\mono\AppData\Local\Temp\ccTOguEk.s:340    .bss.led_state:00000000 $d

NO UNDEFINED SYMBOLS
