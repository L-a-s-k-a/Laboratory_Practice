ARM GAS  C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.global	GPIO_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	GPIO_Init:
  28              	.LFB130:
  29              		.file 2 "Core/Src/init.c"
   1:Core/Src/init.c **** #include <stdint.h>
   2:Core/Src/init.c **** #include "init.h"
   3:Core/Src/init.c **** 
   4:Core/Src/init.c **** 
   5:Core/Src/init.c **** // 全局变量
   6:Core/Src/init.c **** volatile uint8_t button_flag = 0;        // 按钮状态
   7:Core/Src/init.c **** volatile uint8_t led_states[4] = {0};    // 4 个 LED 的状态
   8:Core/Src/init.c **** volatile uint8_t button_count = 0;       // 按钮按下次数
   9:Core/Src/init.c **** 
  10:Core/Src/init.c **** // 初始化 GPIO
  11:Core/Src/init.c **** void GPIO_Init(void) {
  30              		.loc 2 11 22 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  12:Core/Src/init.c ****     // 开启 GPIOB 和 GPIOC 时钟
  13:Core/Src/init.c ****     SET_BIT(*(volatile uint32_t *)RCC_GPIO_EN, RCC_GPIOB_EN | RCC_GPIOC_EN);
  35              		.loc 2 13 5 view .LVU1
  36 0000 074A     		ldr	r2, .L2
  37 0002 D2F83038 		ldr	r3, [r2, #2096]
  38 0006 43F00603 		orr	r3, r3, #6
  39 000a C2F83038 		str	r3, [r2, #2096]
  14:Core/Src/init.c **** 
  15:Core/Src/init.c ****     // 设置 GPIOB 的 PIN0、PIN7、PIN10、PIN14 为输出模式
  16:Core/Src/init.c ****     *(volatile uint32_t *)GPIOB_MODER |= GPIOB_MODE_PIN0_OUT | GPIOB_MODE_PIN7_OUT | GPIOB_MODE_PIN
  40              		.loc 2 16 5 view .LVU2
  41 000e A2F54052 		sub	r2, r2, #12288
  42 0012 D2F80014 		ldr	r1, [r2, #1024]
ARM GAS  C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s 			page 2


  43              		.loc 2 16 39 is_stmt 0 view .LVU3
  44 0016 034B     		ldr	r3, .L2+4
  45 0018 0B43     		orrs	r3, r3, r1
  46 001a C2F80034 		str	r3, [r2, #1024]
  17:Core/Src/init.c **** }
  47              		.loc 2 17 1 view .LVU4
  48 001e 7047     		bx	lr
  49              	.L3:
  50              		.align	2
  51              	.L2:
  52 0020 00300240 		.word	1073885184
  53 0024 01401010 		.word	269500417
  54              		.cfi_endproc
  55              	.LFE130:
  57              		.section	.text.UpdateLEDs,"ax",%progbits
  58              		.align	1
  59              		.global	UpdateLEDs
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  64              	UpdateLEDs:
  65              	.LVL0:
  66              	.LFB131:
  18:Core/Src/init.c **** 
  19:Core/Src/init.c **** // 更新 LED 状态
  20:Core/Src/init.c **** void UpdateLEDs(uint8_t count) {
  67              		.loc 2 20 32 is_stmt 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  21:Core/Src/init.c ****     // 关闭所有 LED
  22:Core/Src/init.c ****     *(volatile uint32_t *)GPIOB_BSRR = GPIOB_BSRR_PIN0_RESET | GPIOB_BSRR_PIN7_RESET | GPIOB_BSRR_P
  72              		.loc 2 22 5 view .LVU6
  73              		.loc 2 22 38 is_stmt 0 view .LVU7
  74 0000 204B     		ldr	r3, .L15
  75 0002 214A     		ldr	r2, .L15+4
  76 0004 C3F81824 		str	r2, [r3, #1048]
  23:Core/Src/init.c **** 
  24:Core/Src/init.c ****     // 根据按钮次数更新 LED 状态
  25:Core/Src/init.c ****     for (uint8_t i = 0; i < 4; i++) {
  77              		.loc 2 25 5 is_stmt 1 view .LVU8
  78              	.LBB2:
  79              		.loc 2 25 10 view .LVU9
  80              	.LVL1:
  81              		.loc 2 25 18 is_stmt 0 view .LVU10
  82 0008 0023     		movs	r3, #0
  83              		.loc 2 25 5 view .LVU11
  84 000a 08E0     		b	.L5
  85              	.LVL2:
  86              	.L11:
  26:Core/Src/init.c ****         led_states[i] = (i < count) ? 1 : 0; // 更新全局变量
  27:Core/Src/init.c ****         if (led_states[i]) {
  28:Core/Src/init.c ****             switch (i) {
  29:Core/Src/init.c ****                 case 0: *(volatile uint32_t *)GPIOB_BSRR |= GPIOB_BSRR_PIN0_SET; break;
  87              		.loc 2 29 25 is_stmt 1 view .LVU12
  88 000c 1D49     		ldr	r1, .L15
ARM GAS  C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s 			page 3


  89 000e D1F81824 		ldr	r2, [r1, #1048]
  90              		.loc 2 29 58 is_stmt 0 view .LVU13
  91 0012 42F00102 		orr	r2, r2, #1
  92 0016 C1F81824 		str	r2, [r1, #1048]
  93              		.loc 2 29 82 is_stmt 1 view .LVU14
  94              	.L6:
  25:Core/Src/init.c ****         led_states[i] = (i < count) ? 1 : 0; // 更新全局变量
  95              		.loc 2 25 33 discriminator 2 view .LVU15
  96 001a 0133     		adds	r3, r3, #1
  97              	.LVL3:
  25:Core/Src/init.c ****         led_states[i] = (i < count) ? 1 : 0; // 更新全局变量
  98              		.loc 2 25 33 is_stmt 0 discriminator 2 view .LVU16
  99 001c DBB2     		uxtb	r3, r3
 100              	.LVL4:
 101              	.L5:
  25:Core/Src/init.c ****         led_states[i] = (i < count) ? 1 : 0; // 更新全局变量
 102              		.loc 2 25 27 is_stmt 1 discriminator 1 view .LVU17
 103 001e 032B     		cmp	r3, #3
 104 0020 2ED8     		bhi	.L14
  26:Core/Src/init.c ****         led_states[i] = (i < count) ? 1 : 0; // 更新全局变量
 105              		.loc 2 26 9 view .LVU18
  26:Core/Src/init.c ****         led_states[i] = (i < count) ? 1 : 0; // 更新全局变量
 106              		.loc 2 26 41 is_stmt 0 view .LVU19
 107 0022 8342     		cmp	r3, r0
 108 0024 2CBF     		ite	cs
 109 0026 0021     		movcs	r1, #0
 110 0028 0121     		movcc	r1, #1
  26:Core/Src/init.c ****         led_states[i] = (i < count) ? 1 : 0; // 更新全局变量
 111              		.loc 2 26 23 view .LVU20
 112 002a 184A     		ldr	r2, .L15+8
 113 002c D154     		strb	r1, [r2, r3]
  27:Core/Src/init.c ****             switch (i) {
 114              		.loc 2 27 9 is_stmt 1 view .LVU21
  27:Core/Src/init.c ****             switch (i) {
 115              		.loc 2 27 23 is_stmt 0 view .LVU22
 116 002e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
  27:Core/Src/init.c ****             switch (i) {
 117              		.loc 2 27 12 view .LVU23
 118 0030 002A     		cmp	r2, #0
 119 0032 F2D0     		beq	.L6
  28:Core/Src/init.c ****                 case 0: *(volatile uint32_t *)GPIOB_BSRR |= GPIOB_BSRR_PIN0_SET; break;
 120              		.loc 2 28 13 is_stmt 1 view .LVU24
 121 0034 032B     		cmp	r3, #3
 122 0036 F0D8     		bhi	.L6
 123 0038 01A2     		adr	r2, .L8
 124 003a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 125 003e 00BF     		.p2align 2
 126              	.L8:
 127 0040 0D000000 		.word	.L11+1
 128 0044 51000000 		.word	.L10+1
 129 0048 61000000 		.word	.L9+1
 130 004c 71000000 		.word	.L7+1
 131              		.p2align 1
 132              	.L10:
  30:Core/Src/init.c ****                 case 1: *(volatile uint32_t *)GPIOB_BSRR |= GPIOB_BSRR_PIN7_SET; break;
 133              		.loc 2 30 25 view .LVU25
 134 0050 0C49     		ldr	r1, .L15
ARM GAS  C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s 			page 4


 135 0052 D1F81824 		ldr	r2, [r1, #1048]
 136              		.loc 2 30 58 is_stmt 0 view .LVU26
 137 0056 42F08002 		orr	r2, r2, #128
 138 005a C1F81824 		str	r2, [r1, #1048]
 139              		.loc 2 30 82 is_stmt 1 view .LVU27
 140 005e DCE7     		b	.L6
 141              	.L9:
  31:Core/Src/init.c ****                 case 2: *(volatile uint32_t *)GPIOB_BSRR |= GPIOB_BSRR_PIN14_SET; break;
 142              		.loc 2 31 25 view .LVU28
 143 0060 0849     		ldr	r1, .L15
 144 0062 D1F81824 		ldr	r2, [r1, #1048]
 145              		.loc 2 31 58 is_stmt 0 view .LVU29
 146 0066 42F48042 		orr	r2, r2, #16384
 147 006a C1F81824 		str	r2, [r1, #1048]
 148              		.loc 2 31 83 is_stmt 1 view .LVU30
 149 006e D4E7     		b	.L6
 150              	.L7:
  32:Core/Src/init.c ****                 case 3: *(volatile uint32_t *)GPIOB_BSRR |= GPIOB_BSRR_PIN10_SET; break;
 151              		.loc 2 32 25 view .LVU31
 152 0070 0449     		ldr	r1, .L15
 153 0072 D1F81824 		ldr	r2, [r1, #1048]
 154              		.loc 2 32 58 is_stmt 0 view .LVU32
 155 0076 42F48062 		orr	r2, r2, #1024
 156 007a C1F81824 		str	r2, [r1, #1048]
 157              		.loc 2 32 83 is_stmt 1 view .LVU33
 158 007e CCE7     		b	.L6
 159              	.L14:
 160              	.LBE2:
  33:Core/Src/init.c ****             }
  34:Core/Src/init.c ****         }
  35:Core/Src/init.c ****     }
  36:Core/Src/init.c **** }
 161              		.loc 2 36 1 is_stmt 0 view .LVU34
 162 0080 7047     		bx	lr
 163              	.L16:
 164 0082 00BF     		.align	2
 165              	.L15:
 166 0084 00000240 		.word	1073872896
 167 0088 00008144 		.word	1149304832
 168 008c 00000000 		.word	led_states
 169              		.cfi_endproc
 170              	.LFE131:
 172              		.section	.text.main,"ax",%progbits
 173              		.align	1
 174              		.global	main
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 179              	main:
 180              	.LFB132:
   1:Core/Src/main.c **** #include "stdint.h"
   2:Core/Src/main.c **** #include "init.h"
   3:Core/Src/main.c **** #include "init.c"
   4:Core/Src/main.c **** 
   5:Core/Src/main.c **** 
   6:Core/Src/main.c **** int main(void) {
 181              		.loc 1 6 16 is_stmt 1 view -0
ARM GAS  C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s 			page 5


 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 8
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185 0000 00B5     		push	{lr}
 186              	.LCFI0:
 187              		.cfi_def_cfa_offset 4
 188              		.cfi_offset 14, -4
 189 0002 83B0     		sub	sp, sp, #12
 190              	.LCFI1:
 191              		.cfi_def_cfa_offset 16
   7:Core/Src/main.c ****     GPIO_Init();
 192              		.loc 1 7 5 view .LVU36
 193 0004 FFF7FEFF 		bl	GPIO_Init
 194              	.LVL5:
   8:Core/Src/main.c ****     uint8_t button_pressed = 0;
 195              		.loc 1 8 5 view .LVU37
 196              		.loc 1 8 13 is_stmt 0 view .LVU38
 197 0008 0021     		movs	r1, #0
 198 000a 1AE0     		b	.L19
 199              	.LVL6:
 200              	.L21:
 201              	.LBB3:
   9:Core/Src/main.c **** 
  10:Core/Src/main.c ****     while (1) {
  11:Core/Src/main.c ****         // 检测按钮状态
  12:Core/Src/main.c ****         button_flag = READ_BIT(*(volatile uint32_t *)GPIOC_IDR, GPIOC_IDR_PIN13) ? 1 : 0;
  13:Core/Src/main.c **** 
  14:Core/Src/main.c ****         if (button_flag) { // 按钮按下
  15:Core/Src/main.c ****             for (volatile int i = 0; i < 100000; i++); // 简单延时去抖
 202              		.loc 1 15 51 is_stmt 1 discriminator 3 view .LVU39
 203 000c 019B     		ldr	r3, [sp, #4]
 204 000e 0133     		adds	r3, r3, #1
 205 0010 0193     		str	r3, [sp, #4]
 206              	.L20:
 207              		.loc 1 15 40 discriminator 1 view .LVU40
 208 0012 019A     		ldr	r2, [sp, #4]
 209 0014 234B     		ldr	r3, .L31
 210 0016 9A42     		cmp	r2, r3
 211 0018 F8DD     		ble	.L21
 212              	.LBE3:
  16:Core/Src/main.c ****             if (!READ_BIT(*(volatile uint32_t *)GPIOC_IDR, GPIOC_IDR_PIN13) && !button_pressed) {
 213              		.loc 1 16 13 view .LVU41
 214              		.loc 1 16 18 is_stmt 0 view .LVU42
 215 001a 234B     		ldr	r3, .L31+4
 216 001c D3F81038 		ldr	r3, [r3, #2064]
 217              		.loc 1 16 16 view .LVU43
 218 0020 13F4005F 		tst	r3, #8192
 219 0024 0DD1     		bne	.L19
 220              		.loc 1 16 77 discriminator 1 view .LVU44
 221 0026 61B9     		cbnz	r1, .L19
  17:Core/Src/main.c ****                 button_pressed = 1; // 防止重复检测
 222              		.loc 1 17 17 is_stmt 1 view .LVU45
 223              	.LVL7:
  18:Core/Src/main.c ****                 button_count++;
 224              		.loc 1 18 17 view .LVU46
 225              		.loc 1 18 29 is_stmt 0 view .LVU47
 226 0028 204A     		ldr	r2, .L31+8
ARM GAS  C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s 			page 6


 227 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 228 002c 0133     		adds	r3, r3, #1
 229 002e DBB2     		uxtb	r3, r3
 230 0030 1370     		strb	r3, [r2]
  19:Core/Src/main.c **** 
  20:Core/Src/main.c ****                 if (button_count <= 4) {
 231              		.loc 1 20 17 is_stmt 1 view .LVU48
 232              		.loc 1 20 34 is_stmt 0 view .LVU49
 233 0032 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 234 0034 DBB2     		uxtb	r3, r3
 235              		.loc 1 20 20 view .LVU50
 236 0036 042B     		cmp	r3, #4
 237 0038 10D8     		bhi	.L23
  21:Core/Src/main.c ****                     // 1~4 次按键：依次点亮 LED
  22:Core/Src/main.c ****                     UpdateLEDs(button_count);
 238              		.loc 1 22 21 is_stmt 1 view .LVU51
 239 003a 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 240 003c FFF7FEFF 		bl	UpdateLEDs
 241              	.LVL8:
  17:Core/Src/main.c ****                 button_count++;
 242              		.loc 1 17 32 is_stmt 0 view .LVU52
 243 0040 0121     		movs	r1, #1
 244              	.LVL9:
 245              	.L19:
  10:Core/Src/main.c ****         // 检测按钮状态
 246              		.loc 1 10 5 is_stmt 1 view .LVU53
  12:Core/Src/main.c **** 
 247              		.loc 1 12 9 view .LVU54
  12:Core/Src/main.c **** 
 248              		.loc 1 12 23 is_stmt 0 view .LVU55
 249 0042 194B     		ldr	r3, .L31+4
 250 0044 D3F81038 		ldr	r3, [r3, #2064]
  12:Core/Src/main.c **** 
 251              		.loc 1 12 86 view .LVU56
 252 0048 C3F34033 		ubfx	r3, r3, #13, #1
  12:Core/Src/main.c **** 
 253              		.loc 1 12 21 view .LVU57
 254 004c 184A     		ldr	r2, .L31+12
 255 004e 1370     		strb	r3, [r2]
  14:Core/Src/main.c ****             for (volatile int i = 0; i < 100000; i++); // 简单延时去抖
 256              		.loc 1 14 9 is_stmt 1 view .LVU58
  14:Core/Src/main.c ****             for (volatile int i = 0; i < 100000; i++); // 简单延时去抖
 257              		.loc 1 14 13 is_stmt 0 view .LVU59
 258 0050 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  14:Core/Src/main.c ****             for (volatile int i = 0; i < 100000; i++); // 简单延时去抖
 259              		.loc 1 14 12 view .LVU60
 260 0052 002B     		cmp	r3, #0
 261 0054 F5D0     		beq	.L19
  15:Core/Src/main.c ****             if (!READ_BIT(*(volatile uint32_t *)GPIOC_IDR, GPIOC_IDR_PIN13) && !button_pressed) {
 262              		.loc 1 15 13 is_stmt 1 view .LVU61
 263              	.LBB4:
  15:Core/Src/main.c ****             if (!READ_BIT(*(volatile uint32_t *)GPIOC_IDR, GPIOC_IDR_PIN13) && !button_pressed) {
 264              		.loc 1 15 18 view .LVU62
  15:Core/Src/main.c ****             if (!READ_BIT(*(volatile uint32_t *)GPIOC_IDR, GPIOC_IDR_PIN13) && !button_pressed) {
 265              		.loc 1 15 31 is_stmt 0 view .LVU63
 266 0056 0023     		movs	r3, #0
 267 0058 0193     		str	r3, [sp, #4]
ARM GAS  C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s 			page 7


  15:Core/Src/main.c ****             if (!READ_BIT(*(volatile uint32_t *)GPIOC_IDR, GPIOC_IDR_PIN13) && !button_pressed) {
 268              		.loc 1 15 13 view .LVU64
 269 005a DAE7     		b	.L20
 270              	.LVL10:
 271              	.L23:
  15:Core/Src/main.c ****             if (!READ_BIT(*(volatile uint32_t *)GPIOC_IDR, GPIOC_IDR_PIN13) && !button_pressed) {
 272              		.loc 1 15 13 view .LVU65
 273              	.LBE4:
  23:Core/Src/main.c ****                 } else if (button_count == 5) {
 274              		.loc 1 23 24 is_stmt 1 view .LVU66
 275              		.loc 1 23 41 is_stmt 0 view .LVU67
 276 005c 134B     		ldr	r3, .L31+8
 277 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 278 0060 DBB2     		uxtb	r3, r3
 279              		.loc 1 23 27 view .LVU68
 280 0062 052B     		cmp	r3, #5
 281 0064 0BD0     		beq	.L28
  24:Core/Src/main.c ****                     // 第 5 次按键：关闭所有 LED
  25:Core/Src/main.c ****                     UpdateLEDs(0);
  26:Core/Src/main.c ****                 } else if (button_count == 6) {
 282              		.loc 1 26 24 is_stmt 1 view .LVU69
 283              		.loc 1 26 41 is_stmt 0 view .LVU70
 284 0066 114B     		ldr	r3, .L31+8
 285 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 286 006a DBB2     		uxtb	r3, r3
 287              		.loc 1 26 27 view .LVU71
 288 006c 062B     		cmp	r3, #6
 289 006e 0BD0     		beq	.L29
  27:Core/Src/main.c ****                     // 第 6 次按键：全部点亮
  28:Core/Src/main.c ****                     UpdateLEDs(4);
  29:Core/Src/main.c ****                 } else if (button_count >= 7) {
 290              		.loc 1 29 24 is_stmt 1 view .LVU72
 291              		.loc 1 29 41 is_stmt 0 view .LVU73
 292 0070 0E4B     		ldr	r3, .L31+8
 293 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 294 0074 DBB2     		uxtb	r3, r3
 295              		.loc 1 29 27 view .LVU74
 296 0076 062B     		cmp	r3, #6
 297 0078 0BD8     		bhi	.L30
  17:Core/Src/main.c ****                 button_count++;
 298              		.loc 1 17 32 view .LVU75
 299 007a 0121     		movs	r1, #1
 300 007c E1E7     		b	.L19
 301              	.L28:
  25:Core/Src/main.c ****                 } else if (button_count == 6) {
 302              		.loc 1 25 21 is_stmt 1 view .LVU76
 303 007e 0020     		movs	r0, #0
 304 0080 FFF7FEFF 		bl	UpdateLEDs
 305              	.LVL11:
  17:Core/Src/main.c ****                 button_count++;
 306              		.loc 1 17 32 is_stmt 0 view .LVU77
 307 0084 0121     		movs	r1, #1
 308 0086 DCE7     		b	.L19
 309              	.L29:
  28:Core/Src/main.c ****                 } else if (button_count >= 7) {
 310              		.loc 1 28 21 is_stmt 1 view .LVU78
 311 0088 0420     		movs	r0, #4
ARM GAS  C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s 			page 8


 312 008a FFF7FEFF 		bl	UpdateLEDs
 313              	.LVL12:
  17:Core/Src/main.c ****                 button_count++;
 314              		.loc 1 17 32 is_stmt 0 view .LVU79
 315 008e 0121     		movs	r1, #1
 316 0090 D7E7     		b	.L19
 317              	.L30:
  30:Core/Src/main.c ****                     // 第 7 次按键：重置计数和状态
  31:Core/Src/main.c ****                     UpdateLEDs(0);
 318              		.loc 1 31 21 is_stmt 1 view .LVU80
 319 0092 0020     		movs	r0, #0
 320 0094 FFF7FEFF 		bl	UpdateLEDs
 321              	.LVL13:
  32:Core/Src/main.c ****                     button_count = 0;
 322              		.loc 1 32 21 view .LVU81
 323              		.loc 1 32 34 is_stmt 0 view .LVU82
 324 0098 044B     		ldr	r3, .L31+8
 325 009a 0022     		movs	r2, #0
 326 009c 1A70     		strb	r2, [r3]
  17:Core/Src/main.c ****                 button_count++;
 327              		.loc 1 17 32 view .LVU83
 328 009e 0121     		movs	r1, #1
 329 00a0 CFE7     		b	.L19
 330              	.L32:
 331 00a2 00BF     		.align	2
 332              	.L31:
 333 00a4 9F860100 		.word	99999
 334 00a8 00000240 		.word	1073872896
 335 00ac 00000000 		.word	button_count
 336 00b0 00000000 		.word	button_flag
 337              		.cfi_endproc
 338              	.LFE132:
 340              		.global	button_count
 341              		.section	.bss.button_count,"aw",%nobits
 344              	button_count:
 345 0000 00       		.space	1
 346              		.global	led_states
 347              		.section	.bss.led_states,"aw",%nobits
 348              		.align	2
 351              	led_states:
 352 0000 00000000 		.space	4
 353              		.global	button_flag
 354              		.section	.bss.button_flag,"aw",%nobits
 357              	button_flag:
 358 0000 00       		.space	1
 359              		.text
 360              	.Letext0:
 361              		.file 3 "D:/cccccccc/SysGCC/arm-none-eabi/include/machine/_default_types.h"
 362              		.file 4 "D:/cccccccc/SysGCC/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s:21     .text.GPIO_Init:00000000 $t
C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s:27     .text.GPIO_Init:00000000 GPIO_Init
C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s:52     .text.GPIO_Init:00000020 $d
C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s:58     .text.UpdateLEDs:00000000 $t
C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s:64     .text.UpdateLEDs:00000000 UpdateLEDs
C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s:127    .text.UpdateLEDs:00000040 $d
C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s:131    .text.UpdateLEDs:00000050 $t
C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s:166    .text.UpdateLEDs:00000084 $d
C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s:351    .bss.led_states:00000000 led_states
C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s:173    .text.main:00000000 $t
C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s:179    .text.main:00000000 main
C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s:333    .text.main:000000a4 $d
C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s:344    .bss.button_count:00000000 button_count
C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s:357    .bss.button_flag:00000000 button_flag
C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s:345    .bss.button_count:00000000 $d
C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s:348    .bss.led_states:00000000 $d
C:\Uers\HAO\AppData\Local\Temp\ccpOMDnN.s:358    .bss.button_flag:00000000 $d

NO UNDEFINED SYMBOLS
